# Quick Start (at fist stop ROS Master if working on host)
# $ docker compose -f compose.rosbot.yaml up

services:
  # ROS Galactic
  nav2:
    image: husarion/nav2:galactic
    restart: unless-stopped
    volumes:
      - ./husarion_nav2_config:/ros2_ws/src/husarion_nav2/config
    command: ros2 launch husarion_nav2 bringup_both.launch.py

  # ROS Galactic
  microros:
    image: microros/micro-ros-agent:galactic
    restart: unless-stopped
    # ports:
    #   - "8888:8888/udp"
    command: udp4 --port 8888

  # ROS 2 Galacitc
  rosbot_xl:
    build:
      context: ./../
      dockerfile: ./Dockerfile
    restart: unless-stopped
    volumes:
      - ../src/rosbot_xl_bringup:/ros2_ws/src/rosbot_xl_bringup
      - ../src/rosbot_xl_description:/ros2_ws/src/rosbot_xl_description
      - ../src/rosbot_xl_ekf:/ros2_ws/src/rosbot_xl_ekf
      # - ../src/rosbot_xl_hardware:/ros2_ws/src/rosbot_xl_hardware
      - ../src/rosbot_xl_kinematics:/ros2_ws/src/rosbot_xl_kinematics
    command: ros2 launch rosbot_xl_bringup diff_drive.launch.py

  # ROS Galactic Rplidar
  rplidar:
    image: husarion/rplidar:galactic
    restart: unless-stopped
    devices:
      - /dev/ttyUSB0
    command: ros2 launch rplidar_ros2 rplidar_s1_launch.py