<?xml version='1.0'?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <xacro:macro name="rosbot_xl_robot" params="use_sim use_gpu simulation_engine">

    <xacro:property name="wheel_radius" value="0.048" />
    <xacro:property name="wheel_separation_y" value="0.236" />

    <!-- INCLUDE ROBOT PARTS DEFINITIONS -->
    <xacro:include filename="$(find rosbot_xl_description)/urdf/body.urdf.xacro" ns="body" />
    <xacro:include filename="$(find rosbot_xl_description)/urdf/wheel.urdf.xacro" ns="wheel" />

    <!-- BODY DECLARATION -->
    <xacro:body.body wheel_radius="${wheel_radius}" />

    <!-- WHEEL DECLARATION -->
    <xacro:wheel.wheel wheel_radius="${wheel_radius}" wheel_separation_y="${wheel_separation_y}" prefix="fl" />
    <xacro:wheel.wheel wheel_radius="${wheel_radius}" wheel_separation_y="${wheel_separation_y}" prefix="fr" />
    <xacro:wheel.wheel wheel_radius="${wheel_radius}" wheel_separation_y="${wheel_separation_y}" prefix="rl" />
    <xacro:wheel.wheel wheel_radius="${wheel_radius}" wheel_separation_y="${wheel_separation_y}" prefix="rr" />

    <!-- ROS2 CONTROL -->
    <xacro:unless value="$(arg use_sim)">
      <ros2_control name="imu" type="sensor">
        <hardware>
          <plugin>rosbot_hardware_interfaces/RosbotImuSensor</plugin>
          <param name="connection_timeout_ms">120000</param>
          <param name="connection_check_period_ms">500</param>
        </hardware>
        <sensor name="imu">
          <state_interface name="orientation.x" />
          <state_interface name="orientation.y" />
          <state_interface name="orientation.z" />
          <state_interface name="orientation.w" />
          <state_interface name="angular_velocity.x" />
          <state_interface name="angular_velocity.y" />
          <state_interface name="angular_velocity.z" />
          <state_interface name="linear_acceleration.x" />
          <state_interface name="linear_acceleration.y" />
          <state_interface name="linear_acceleration.z" />
        </sensor>
      </ros2_control>
    </xacro:unless>

    <ros2_control name="wheels" type="system">
      <hardware>
        <xacro:if value="${use_sim and simulation_engine == 'gazebo-classic'}">
          <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </xacro:if>
        <xacro:if value="${use_sim and simulation_engine == 'ignition-gazebo'}">
          <plugin>ign_ros2_control/IgnitionSystem</plugin>
        </xacro:if>
        <xacro:unless value="$(arg use_sim)">
          <plugin>rosbot_hardware_interfaces/RosbotSystem</plugin>
          <param name="connection_timeout_ms">120000</param>
          <param name="connection_check_period_ms">500</param>

          <!-- for some reason diff drive controller publishes velocities for motors in rad/s, but expects feedback in m/s
            both commands and feedback from digital board are in rad/s, so it is necessary to convert it
            maybe will be resolved (https://github.com/ros-controls/ros2_controllers/issues/411), then it can be removed -->
          <param name="wheel_radius">${wheel_radius}</param>

          <!-- order of velocity commands to be published in motors_cmd Float32MultiArray msg -->
          <param name="velocity_command_joint_order">
                rr_wheel_joint,
                rl_wheel_joint,
                fr_wheel_joint,
                fl_wheel_joint
          </param>
        </xacro:unless>
      </hardware>

      <joint name="fl_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>
      <joint name="fr_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>
      <joint name="rl_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>
      <joint name="rr_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
      </joint>

      <xacro:if value="${use_sim and simulation_engine == 'ignition-gazebo'}">
        <sensor name="imu">
          <state_interface name="orientation.x" />
          <state_interface name="orientation.y" />
          <state_interface name="orientation.z" />
          <state_interface name="orientation.w" />
          <state_interface name="angular_velocity.x" />
          <state_interface name="angular_velocity.y" />
          <state_interface name="angular_velocity.z" />
          <state_interface name="linear_acceleration.x" />
          <state_interface name="linear_acceleration.y" />
          <state_interface name="linear_acceleration.z" />
        </sensor>
      </xacro:if>
    </ros2_control>

    <!-- SIMULATION IGNITION GAZEBO -->
    <xacro:if value="${use_sim and simulation_engine == 'ignition-gazebo'}">
      <gazebo>
        <plugin filename="ign_ros2_control-system" name="ign_ros2_control::IgnitionROS2ControlPlugin">
          <parameters>$(find rosbot_xl_hardware)/config/diff_drive_controller.yaml</parameters>
        </plugin>
      </gazebo>
    </xacro:if>

    <gazebo reference="imu_link">
      <sensor name="imu" type="imu">
        <plugin filename="ignition-gazebo-imu-system" name="ignition::gazebo::systems::Imu"></plugin>
        <always_on>true</always_on>
        <update_rate>25</update_rate>
        <topic>imu/data_raw</topic>
        <visualize>false</visualize>
        <enable_metrics>false</enable_metrics>
        <frame_id>imu_link</frame_id>
        <ignition_frame_id>imu_link</ignition_frame_id>
      </sensor>
    </gazebo>

  </xacro:macro>
</robot>