<?xml version='1.0'?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <xacro:macro name="rosbot_xl_robot" params="use_sim use_gpu simulation_engine">

    <xacro:property name="wheel_radius" value="0.041" />
    <xacro:property name="wheel_separation_y" value="0.236" />

    <!-- INCLUDE ROBOT PARTS DEFINITIONS -->
    <xacro:include filename="$(find rosbot_xl_description)/urdf/body.urdf.xacro" ns="body" />
    <xacro:include filename="$(find rosbot_xl_description)/urdf/wheel.urdf.xacro" ns="wheel" />

    <!-- BODY DECLARATION -->
    <xacro:body.body wheel_radius="${wheel_radius}" />

    <!-- WHEEL DECLARATION -->
    <xacro:wheel.wheel wheel_type="differential" wheel_radius="${wheel_radius}" wheel_separation_y="${wheel_separation_y}" prefix="front_left" />
    <xacro:wheel.wheel wheel_type="differential" wheel_radius="${wheel_radius}" wheel_separation_y="${wheel_separation_y}" prefix="front_right" />
    <xacro:wheel.wheel wheel_type="differential" wheel_radius="${wheel_radius}" wheel_separation_y="${wheel_separation_y}" prefix="rear_left" />
    <xacro:wheel.wheel wheel_type="differential" wheel_radius="${wheel_radius}" wheel_separation_y="${wheel_separation_y}" prefix="rear_right" />

    <!-- ROS2 CONTROL -->
    <xacro:include filename="$(find rosbot_hardware_interfaces)/urdf/ros2_control.urdf.xacro" />
    <xacro:ros2_control_system />

    <!-- SIMULATION GAZEBO -->
    <xacro:if value="${use_sim and simulation_engine == 'gazebo-classic'}">
      <gazebo>
        <plugin name='skid_steer_drive' filename='libgazebo_ros_diff_drive.so'>
          <ros></ros>
          <update_rate>10</update_rate>
          <num_wheel_pairs>2</num_wheel_pairs>
          <left_joint>front_left_wheel_joint</left_joint>
          <right_joint>front_right_wheel_joint</right_joint>
          <left_joint>rear_left_wheel_joint</left_joint>
          <right_joint>rear_right_wheel_joint</right_joint>
          <wheel_separation>${wheel_separation_y}</wheel_separation>
          <wheel_separation>${wheel_separation_y}</wheel_separation>
          <wheel_diameter>${wheel_radius*2.0}</wheel_diameter>
          <wheel_diameter>${wheel_radius*2.0}</wheel_diameter>
          <max_wheel_torque>1.2</max_wheel_torque>
          <max_wheel_acceleration>0.5</max_wheel_acceleration>
          <publish_odom>true</publish_odom>
          <publish_odom_tf>true</publish_odom_tf>
          <publish_wheel_tf>true</publish_wheel_tf>
          <odometry_frame>odom</odometry_frame>
          <robot_base_frame>base_link</robot_base_frame>
        </plugin>
      </gazebo>

      <!-- publish joint states -->
      <gazebo>
        <plugin name="joint_states" filename="libgazebo_ros_joint_state_publisher.so">
          <joint_name>front_left_wheel_joint</joint_name>
          <joint_name>front_right_wheel_joint</joint_name>

          <joint_name>rear_left_wheel_joint</joint_name>
          <joint_name>rear_right_wheel_joint</joint_name>
        </plugin>
      </gazebo>

      <!-- <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
          <robot_param>robot_description</robot_param>
          <robot_param_node>robot_state_publisher</robot_param_node>
          <parameters>$(find rosbot_xl_description)/config/controllers_gazebo.yaml</parameters>
        </plugin>
      </gazebo> -->
    </xacro:if>

    <!-- SIMULATION IGNITION -->
    <xacro:if value="${use_sim and simulation_engine == 'ignition'}">

      <!-- publish IMU -->
      <gazebo reference="imu_link">
        <sensor name="imu_link" type="imu">
          <plugin filename="ignition-gazebo-imu-system" name="ignition::gazebo::systems::Imu"></plugin>

          <always_on>true</always_on>
          <update_rate>25</update_rate>
          <topic>imu/data_raw</topic>
          <visualize>false</visualize>
          <enable_metrics>false</enable_metrics>
          <frame_id>imu_link</frame_id>
          <ignition_frame_id>imu_link</ignition_frame_id>

          <pose relative_to='imu_link'>0 0 0 0 0 0</pose>

          <imu>
            <angular_velocity>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>1.0</mean>
                  <stddev>1</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>1</stddev>
                </noise>
              </z>
            </angular_velocity>
            <linear_acceleration>
              <x>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>0.1</stddev>
                </noise>
              </x>
              <y>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>0.1</stddev>
                </noise>
              </y>
              <z>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>0.1</stddev>
                </noise>
              </z>
            </linear_acceleration>
          </imu>
        </sensor>
      </gazebo>

      <!-- <gazebo>
      <plugin filename="ign_ros2_control-system" name="ign_ros2_control::IgnitionROS2ControlPlugin">
        <parameters>$(find rosbot_xl_gazebo)/config/controllers.yaml</parameters>
      </plugin>
    </gazebo> -->

      <gazebo>
        <plugin filename="libignition-gazebo-diff-drive-system.so" name="ignition::gazebo::systems::DiffDrive">
          <update_rate>10</update_rate>
          <always_on>true</always_on>
          <left_joint>front_left_wheel_joint</left_joint>
          <right_joint>front_right_wheel_joint</right_joint>
          <left_joint>rear_left_wheel_joint</left_joint>
          <right_joint>rear_right_wheel_joint</right_joint>
          <wheel_separation>${wheel_separation_y}</wheel_separation>
          <wheel_separation>${wheel_separation_y}</wheel_separation>
          <wheel_radius>${wheel_radius}</wheel_radius>
          <wheel_radius>${wheel_radius}</wheel_radius>
          <odom_publish_frequency>25</odom_publish_frequency>
          <topic>cmd_vel</topic>
          <odom_topic>odom/wheels</odom_topic>
          <tf_topic>tf</tf_topic>
          <frame_id>odom</frame_id>
          <child_frame_id>base_link</child_frame_id>
        </plugin>
      </gazebo>


      <gazebo>
        <plugin filename="libignition-gazebo-pose-publisher-system.so" name="ignition::gazebo::systems::PosePublisher">
          <publish_link_pose>true</publish_link_pose>
          <publish_collision_pose>false</publish_collision_pose>
          <publish_visual_pose>false</publish_visual_pose>
          <publish_nested_model_pose>false</publish_nested_model_pose>
          <use_pose_vector_msg>true</use_pose_vector_msg>
          <update_frequency>50</update_frequency>
        </plugin>
      </gazebo>

      <gazebo>
        <plugin filename="libignition-gazebo-sensors-system.so" name="ignition::gazebo::systems::Sensors">
          <render_engine>ogre2</render_engine>
        </plugin>
      </gazebo>

      <gazebo>
        <plugin filename="libignition-gazebo-joint-state-publisher-system.so" name="ignition::gazebo::systems::JointStatePublisher">
          <joint name="front_left_wheel_joint"></joint>
          <joint name="front_right_wheel_joint"></joint>
          <joint name="rear_left_wheel_joint"></joint>
          <joint name="rear_right_wheel_joint"></joint>
        </plugin>
      </gazebo>

      <gazebo>
        <plugin filename="ignition-gazebo-scene-broadcaster-system" name="ignition::gazebo::systems::SceneBroadcaster"></plugin>
      </gazebo>
    </xacro:if>

  </xacro:macro>
</robot>